imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@MuBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    translator: ~
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    templating:
        engine: ["twig"]

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes: ['bootstrap_4_layout.html.twig']

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: default
        connections:
            default:
                driver: pdo_mysql
                host: '%database_host%'
                port: '%database_port%'
                dbname: '%database_name%'
                user: '%database_user%'
                password: '%database_password%'
                charset: UTF8
            esync:
                driver: pdo_mysql
                host: '%database_host%'
                port: '%database_port_esync%'
                dbname: '%database_name_esync%'
                user: '%database_user_esync%'
                password: '%database_password_esync%'
                charset: UTF8


        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        default_entity_manager: default
        entity_managers:
            default:
                connection: default
                mappings:
                    MuBundle: ~
            esync:
                connection: esync
                mappings:
                    MuBundle: ~


# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: MuBundle\Entity\Utilisateur
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"

easy_admin:
    design:
        form_theme: 'vertical'

    entities:
        Utilisateur:
            class: MuBundle\Entity\Utilisateur
            list:
                fields: ['id', 'Username', 'email', 'enabled', 'roles']
            form:
            edit:
                fields:
                    - { type: 'group', css_class: 'col-sm-6', label: 'User Information' }
                    - { property: 'Username',type: 'text'}
                    - email
                    - enabled
                    - { type: 'group', css_class: 'col-sm-6', label: 'Canonical Information' }
                    - { property: 'username_canonical',type: 'text'}
                    - { property: 'email_canonical',type: 'text'}
                    - { type: 'group', css_class: 'col-sm-6 new-row', label: 'Level' }
                    - { property: 'roles', type: 'choice', type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
                    - { type: 'group', css_class: 'col-sm-6', label: 'Zone Allowed' }
                    - { property: 'zoneAllowed', type: 'choice', type_options: { multiple: true, choices: { 'Zone_1': 'Z1', 'Zone_2': 'Z2', 'Zone_3': 'Z3' } } }

            new:
                fields:
                    - { type: 'group', css_class: 'col-sm-6', label: 'User Information' }
                    - { property: 'Username',type: 'text'}
                    - { property: 'plainPassword',type: 'text' ,type_options: { required: true} }
                    - email
                    - enabled
                    - { type: 'group', css_class: 'col-sm-6', label: 'Canonical Information' }
                    - { property: 'username_canonical',type: 'text'}
                    - { property: 'email_canonical',type: 'text'}
                    - { type: 'group', css_class: 'col-sm-6 new-row', label: 'Level' }
                    - { property: 'roles', type: 'choice', type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
                    - { type: 'group', css_class: 'col-sm-6', label: 'Zone Allowed' }
                    - { property: 'zoneAllowed', type: 'choice', type_options: { multiple: true, choices: { 'Zone_1': 'Z1', 'Zone_2': 'Z2', 'Zone_3': 'Z3' } } }

                form_options: { validation_groups: ['Registration'] }


sensio_framework_extra:
   router:
        annotations: false

